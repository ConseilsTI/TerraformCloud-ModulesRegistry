name: "Manage Terraform Module"

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      runner:
        description: Label of the runner to use.
        required: false
        type: string
        default: 'ubuntu-latest'
      action:
        description: How to modify the variable value.
        required: true
        type: choice
        options:
          - append
          - remove
          - replace
        default: append
      tfc_organization:
        description: The Terraform Cloud organization where the workspace resides.
        required: false
        type: string
        default: ConseilsTI
      key:
        description: Name of the variable to modify.
        required: false
        type: string
        default: module_names
      value:
        description: Value of the variable to modify.
        required: true
        type: string

jobs:
  job:
    name: Manage Terraform Module
    runs-on: ${{ github.event.inputs.runner }}
    env:
      TFC_API_TOKEN: ${{ secrets.TFC_API_TOKEN }}
    steps:

      - name: Get workspace ID
        id: get_workspace_id
        env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
        run: |
          echo "INFO     | Build required variable."
          workspace_name=$(echo "${EVENT_CONTEXT}" | jq ".repository.name" | sed 's|\"||g')
          workspace_name="${workspace_name,,}"
          echo "INFO     | Workspace name: ${workspace_name}."
          tfc_api_url="https://app.terraform.io/api/v2"
          auth_header="Authorization: Bearer ${TFC_API_TOKEN}"
          content_header="Content-Type: application/vnd.api+json"
          echo "INFO     | Run API call to get workspace ID."
          workspace_id=$(curl -sS -H "${auth_header}" -H "${content_header}" -L "${tfc_api_url}/organizations/${{ github.event.inputs.tfc_organization }}/workspaces/${workspace_name}" | jq '.data."id"' | sed 's|\"||g')
          if [[ "${workspace_id}" != "null" ]]; then
            echo "INFO     | Workspace ID: ${workspace_id}"
            echo "workspace_id=${workspace_id}" >> $GITHUB_OUTPUT
          else
            echo "ERROR    | Unable to get workspace ID."
            exit 1
          fi

      - name: Get variable ID
        id: get_variable_id
        env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
        run: |
          echo "INFO     | Build required variable."
          tfc_api_url="https://app.terraform.io/api/v2"
          auth_header="Authorization: Bearer ${TFC_API_TOKEN}"
          content_header="Content-Type: application/vnd.api+json"
          echo "INFO     | Run API call to get variable ID."
          variable_id=$(curl -sS -H "${auth_header}" -H "${content_header}" -L "${tfc_api_url}/workspaces/${{ steps.get_workspace_id.outputs.workspace_id }}/vars" | jq '.data[] | select(.attributes.key == "${{ github.event.inputs.key }}" ) | .id' | sed 's|\"||g')
          if [[ "${variable_id}" != "null" ]]; then
            echo "INFO     | Variable ID: ${variable_id}"
            echo " variable_id=${variable_id}" >> $GITHUB_OUTPUT
          else
            echo "ERROR    | Unable to get variable ID."
            exit 1
          fi
